# Este es el archivo que uso para que nginx lea las imágenes de mi directorio y las almacene en la nube para uqe esten accesibles desde cualquier lugar

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    root /var/www/html;
    index index.html index.mjml;

    # 
    server_name serverimagenes.duckdns.org 54.152.201.158; #Pongo el dominio y luego la IP por si acaso no trduce uno, que recurra al otro
    ssl_certificate /etc/letsencrypt/live/serverimagenes.duckdns.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/serverimagenes.duckdns.org/privkey.pem; # managed by Certbot

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    #ssl_stapling on;
    #ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s; # DNS recursivo para la verificación de OCSP
    resolver_timeout 5s;


    location / {
        root /var/www/img; # Apunta al directorio de las imágenes
        autoindex on;          # Habilita el listado de directorios
        autoindex_exact_size off; # Muestra tamaños legibles 
        autoindex_localtime on;   # Muestra la hora local
        try_files $uri $uri/ =404; # 1º servir el archivo, luego el directorio, y si no, error 404
    }

    location ~* \.(jpg|jpeg|gif|png|ico|webp|svg)$ {
        root /var/www/img;
        expires 30d; # Cachea las imágenes durante 30 días
        access_log off; # No registra el acceso
    }


}

server {
    listen 80;
    listen [::]:80;
    server_name 54.152.201.158;
    return 301 https://$host$request_uri;
}
